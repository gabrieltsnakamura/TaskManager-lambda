name: Lambda Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request_review:
    types: [submitted]

jobs:
  Test-Lambda:
    name: Lambda Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Test with Unittest
        run: |
          python -m unittest discover tests

  Zip-Lambda:
    needs: Test-Lambda
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Package Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install and zip dependencies
        run: |
          mkdir packages
          python -m pip install --upgrade pip
          pip install --target ./packages -r src/requirements.txt

      - name: Zip dependencies
        run: |
          cd packages
          zip -r ../lambda_deployment.zip .

      - name: Zip Lambda
        run: |
          cd src
          zip ../lambda_deployment.zip task_manager_lambda.py

      - name: Upload Zip
        uses: actions/upload-artifact@v3
        with:
          name: lambda_deployment
          path: lambda_deployment.zip

  Deploy-Lambda:
    needs: Zip-Lambda
    name: Deploy Lambda
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.1.0

      - name: Download Lambda Package
        uses: actions/download-artifact@v3
        with:
          name: lambda_deployment

      - name : Move Lambda Package
        run: mv lambda_deployment.zip terraform

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=variables.tfvars -input=false

      - name: Terraform Apply
        working-directory: ./terraform
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -var-file=variables.tfvars -auto-approve -input=false
